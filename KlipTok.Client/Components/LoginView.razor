@inject TwitchUser User
@inject IConfiguration Config
@inject NavigationManager Nav
@inject Blazored.LocalStorage.ILocalStorageService localStorage

@if (User.AccessToken == string.Empty)
{
	<a href="@Formatters.TwitchUrl.GetLoginUrl(Config, Nav).ToString()">Login with Twitch</a>
}
else
{
	<img src="@User.PictureUri.ToString()" height="40" alt="@User.DisplayName" />
}

@code {

	protected override async Task OnInitializedAsync()
	{

		if (string.IsNullOrEmpty(User.AccessToken)) {
			var user = await localStorage.GetItemAsync<TwitchUser>("twitchuser");
			if (user != null) {
				User.AccessToken = user.AccessToken;
				User.DisplayName = user.DisplayName;
				User.ExpiresAt = user.ExpiresAt;
				User.PictureUri = user.PictureUri;
				User.RefreshToken = user.RefreshToken;
				User.TwitchId = user.TwitchId;
			}
		}

		Console.WriteLine(User.TwitchId);

		User.OnChange += () => this.StateHasChanged();
		await base.OnInitializedAsync();

	}

}